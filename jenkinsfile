pipeline {
    agent any
    environment {
        PCLOUD_CREDENTIALS = credentials('bec67a8c-149f-4db9-b4b8-66d61a1e3b02')
    }
    parameters {
        booleanParam(
            name: 'rebuild',
            defaultValue: false,
            description: 'Select this option if there\'s an update in the project - let unchecked if just executing'
        )
    }
    stages {
        stage ('Set credentials') {
            steps {
                sh 'echo PCLOUD_USER=${PCLOUD_CREDENTIALS_USR} > .env'
                sh 'echo PCLOUD_PASS=${PCLOUD_CREDENTIALS_PSW} >> .env'
            }
        }
        stage('Delete old docker image') {
            when {
                environment name: 'rebuild', value: 'true'
            }
            steps {
                try{
                    sh 'docker image rm cerberus-cerberus'
                } catch (err) {
                    echo err.getMessage()
                }
            }
        }
        stage('Build') {
            steps {
                sh 'docker compose up -d'
            }
        }
        stage ('Test'){
            when {
                environment name: 'rebuild', value: 'true'
            }
            steps {
                sh 'docker exec -t cerberus python -m unittest discover tests'
            }
        }
        stage('Execute') {
            steps {
                sh 'docker exec -t cerberus python src/main.py /home/bruno/documents'
            }
        }
    }
    post {
        always {
            sh 'docker compose down' //Stopping docker
            sh 'rm -f .env' //Deleting env file for security as it contains credentials
            echo 'Bye bye!!! It\'s been a pleasure, master!'
        }
    }
}